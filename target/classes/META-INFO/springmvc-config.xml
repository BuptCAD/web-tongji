<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"    
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"    
    xmlns:context="http://www.springframework.org/schema/context"    
    xmlns:mvc="http://www.springframework.org/schema/mvc"    
    xsi:schemaLocation="     
           http://www.springframework.org/schema/beans     
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd     
           http://www.springframework.org/schema/context     
           http://www.springframework.org/schema/context/spring-context-3.0.xsd    
           http://www.springframework.org/schema/mvc     
           http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">  
           
	<!-- 扫描工程所有的包含@Controller注解的类，并注册为spring管理的bean-->
	<context:component-scan base-package="app.controller"  />
	
	<!-- 相当于注册了DefaultAnnotationHandlerMapping和AnnotationMethodHandlerAdapter两个bean，用于从请求到controller的映射 -->
	<mvc:annotation-driven/> 
	
	<!-- 示例：针对请求路径进行配置的拦截器  -->
    <mvc:interceptors>  
        <mvc:interceptor>  
            <mvc:mapping path="/resources/hm.js"/>  
            <bean  class="app.interceptor.HmJsInterceptor"></bean>  
        </mvc:interceptor>  
    </mvc:interceptors>  
      
     <!-- 示例：全局配置拦截器 
    <mvc:interceptors>  
        <bean class="com.aokunsang.web.interceptor.MyInterceptor"></bean>  
    </mvc:interceptors>  
     --> 
     
     <!-- 静态文件 mapping：url匹配规则，location：资源定位文件 -->
    <mvc:resources mapping="/resources/**" location="/WEB-INF/resources/"/> 
    
    
    <!-- 不需要经过controller的请求配置
    <mvc:view-controller path="/header" view-name="header"/>  
     -->
    
    <!-- 视图解析器 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">  
        <property name="prefix" value="/WEB-INF/views/"></property>  
        <property name="suffix" value=".jsp"></property>  
    </bean>  
     
</beans>